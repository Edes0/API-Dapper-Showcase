// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mimbly.Infrastructure.Identity.Context;

#nullable disable

namespace Mimbly.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Mimbly.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Parent_Id");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.CompanyContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Company_Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("First_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Last_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("Varchar(15)")
                        .HasColumnName("Phone_number");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Company_Contact", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.Mimbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<double>("Co2")
                        .HasColumnType("float")
                        .HasColumnName("Co2");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Company_Id");

                    b.Property<double>("Economy")
                        .HasColumnType("float")
                        .HasColumnName("Economy");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mimbox_Location_Id");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mimbox_Model_Id");

                    b.Property<double>("Plastic")
                        .HasColumnType("float")
                        .HasColumnName("Plastic");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mimbox_Status_Id");

                    b.Property<double>("Water")
                        .HasColumnType("float")
                        .HasColumnName("Water");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModelId");

                    b.HasIndex("StatusId");

                    b.ToTable("Mimbox", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("First_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Last_name");

                    b.Property<Guid>("MimboxId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mimbox_Id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("Varchar(15)")
                        .HasColumnName("Phone_number");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("MimboxId");

                    b.ToTable("Mimbox_Contact", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Country");

                    b.Property<string>("PostalCode")
                        .HasColumnType("Varchar(5)")
                        .HasColumnName("Postal_code");

                    b.Property<string>("Region")
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Region");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("Nvarchar(100)")
                        .HasColumnName("Street_Address");

                    b.HasKey("Id");

                    b.ToTable("Mimbox_Location", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasColumnName("Created");

                    b.Property<string>("Log")
                        .IsRequired()
                        .HasColumnType("Nvarchar(max)")
                        .HasColumnName("Log");

                    b.Property<Guid>("MimboxId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Mimbox_Id");

                    b.HasKey("Id");

                    b.HasIndex("MimboxId");

                    b.ToTable("Mimbox_Log", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Mimbox_Model", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Mimbox_Status", (string)null);
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.Company", b =>
                {
                    b.HasOne("Mimbly.Domain.Entities.Company", "ParentCompany")
                        .WithMany("ChildCompanyList")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentCompany");
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.CompanyContact", b =>
                {
                    b.HasOne("Mimbly.Domain.Entities.Company", null)
                        .WithMany("ContactList")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.Mimbox", b =>
                {
                    b.HasOne("Mimbly.Domain.Entities.Company", null)
                        .WithMany("MimboxList")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Mimbly.Domain.Entities.MimboxLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Mimbly.Domain.Entities.MimboxModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mimbly.Domain.Entities.MimboxStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Model");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxContact", b =>
                {
                    b.HasOne("Mimbly.Domain.Entities.Mimbox", null)
                        .WithMany("ContactList")
                        .HasForeignKey("MimboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.MimboxLog", b =>
                {
                    b.HasOne("Mimbly.Domain.Entities.Mimbox", null)
                        .WithMany("MimboxLogList")
                        .HasForeignKey("MimboxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.Company", b =>
                {
                    b.Navigation("ChildCompanyList");

                    b.Navigation("ContactList");

                    b.Navigation("MimboxList");
                });

            modelBuilder.Entity("Mimbly.Domain.Entities.Mimbox", b =>
                {
                    b.Navigation("ContactList");

                    b.Navigation("MimboxLogList");
                });
#pragma warning restore 612, 618
        }
    }
}
